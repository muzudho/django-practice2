# think

## この連載でのバージョン番号の付け方

一般的には プログラムのパッケージには `1.0.0` のような `セマンティック バージョニング` と呼ばれる法則が利用されていることがある  

この連載は、 `Webサイトのユーザーから見たWebアプリケーションのバージョン` と、 `プログラマーの扱うプログラムのパッケージのバージョン` は異なると考え、  
`セマンティック バージョニング` とは異なる法則でバージョン番号を付ける  

👇 URLでは、アプリケーション名とバージョン番号は分ける  

Example: `http://example.com/practice/v1/`  
Example: `http://example.com/practice/v1.2/`  

SEO対策などで「バージョン番号が異なってもアプリケーションとしては同じとカウントしてほしい」ケースがあるだろう。  
この連載では、 URL については この方法を採用する  

バージョン番号は メジャー番号 だけを使うか、 `v1` と `v1.2` の両方を残したい場合は マイナー番号 まで含める。  
バグ修正のたびに URL が変わるのは ナンセンスなので URL にパッチ番号は含めない  

👇 ローカルPC内では アプリケーションのバージョン番号のメジャー番号は、アプリケーション名の方に含める  

Example: `practice_v1`  

「バージョン番号はアプリケーション名では無いのだから、アプリケーション名に付けるのはおかしい」という考え方はあるが、  
「バージョンのメジャー番号が替われば別アプリケーションだ」と考えれば アプリケーション名にバージョンのメジャー番号を付けるのが合理的なので、  
この連載の アプリケーション名 ではこちらを採用する  

👇 レッスンの都合で プログラム名に付ける振り番には、以下のように表記したり、しなかったりすることがある  

Example: `O1o0`  
Example: `o1o0`  

この表記の名前は **電脳向量表記** と呼ぶことにする  

📖 [電脳向量表記 (Cyber Vector Notation)](https://crieit.net/posts/Cyber-Number-Notation)  
